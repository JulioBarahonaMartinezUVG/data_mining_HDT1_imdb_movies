q()
reticulate::repl_python()
print('hello world')
yes
x <- 5
x
x + 5
install.packages("http://hartleys.github.io/QoRTs/QoRTs_STABLE.tar.gz", repos=NULL, type="source");
#HDT1: Analisis explorativo
#librerias  y set up
if (!require("dplyr"))    {install.packages("dplyr");   library("dplyr")}
setwd('/home/julio/Documents/Estudios/UVG/2020/Primer Semestre/Data_Mining/data_mining_HDT1_imdb_movies')
#import data
imdb_movies <- read.csv('tmdb-movies.csv', header = TRUE)
View(head(imdb_movies, 10))
summary(imdb_movies)
#1
View(head(imdb_movies[order(imdb_movies$budget, decreasing = TRUE),"original_title"],10))
#2
#l : asociaciond e meses con lanzamientos
res <- cor(select_if(imdb_movies, is.numeric))
res["release_year","revenue"]
res["release_date","revenue"]
summary(imdb_movies$release_date)
imdb_movies$release_date <- as.Date(imdb_movies$release_date)
View(imdb_movies)
aggregate(imdb_movies$monthRevenues, by=list(imdb_movies$release_date), sum)
aggregate(imdb_movies['monthsRevenue'], by=imdb_movies[release_date], sum)
aggregate(imdb_movies['revenue'], by=imdb_movies[release_date], sum)
aggregate(imdb_movies['revenue'], by=imdb_movies["release_date"], sum)
View(aggregate(imdb_movies['revenue'], by=imdb_movies["release_date"], sum))
expenses %>% group_by(month=floor_date(release_date, "month")) %>%
summarize(amount=sum(revenue))
#librerias  y set up
if (!require("dplyr"))    {install.packages("dplyr");   library("dplyr")}
if (!require("lubridate"))    {install.packages("lubridate");   library("lubridate")}
#l : asociaciond e meses con lanzamientos
res <- cor(select_if(imdb_movies, is.numeric))
res["release_date","revenue"]
expenses %>% group_by(month=floor_date(release_date, "month")) %>%
summarize(amount=sum(revenue))
imdb_movies %>% group_by(month=floor_date(release_date, "month")) %>%
summarize(amount=sum(revenue))
View( imdb_movies %>% group_by(month=floor_date(release_date, "month")) %>%
summarize(amount=sum(revenue)) )
install.packages("lubridate")
install.packages("lubridate")
imdb_movies %>%
dplyr::mutate(year = lubridate::year(release_date),
month = lubridate::month(release_date),
day = lubridate::day(release_date))
imdb_movies %>% dplyr::mutate(year = lubridate::year(release_date),
month = lubridate::month(release_date),
day = lubridate::day(release_date))
#librerias  y set up
if (!require("dplyr"))    {install.packages("dplyr");   library("dplyr")}
View( imdb_movies %>% group_by(month=floor_date(release_date, "month")) %>%
summarize(amount=sum(revenue)) )
imdb_movies %>% dplyr::mutate(year = lubridate::year(release_date),
month = lubridate::month(release_date),
day = lubridate::day(release_date))
View(imdb_movies)
x <- imdb_movies %>% dplyr::mutate(year = lubridate::year(release_date),
month = lubridate::month(release_date),
day = lubridate::day(release_date))
View(x)
imdb_movies$release_date <- as.Date(imdb_movies$release_date)
imdb_movies <- imdb_movies %>% dplyr::mutate(year = lubridate::year(release_date),
month = lubridate::month(release_date),
day = lubridate::day(release_date))
View(imdb_movies)
aggregate(imdb_movies$revenue, by=list(Category=imdb_movies$month), FUN=sum)
earning <- aggregate(imdb_movies$revenue, by=list(Category=imdb_movies$month), FUN=sum)
res <- cor(earning)
res["release_date","revenue"]
res["month","revenue"]
earning <- aggregate(imdb_movies$revenue, by=list(month=imdb_movies$month), FUN=sum)
res <- cor(earning)
View(earning)
res["month","x"]
#l : asociaciond e meses con lanzamientos
imdb_movies$release_date <- as.Date(imdb_movies$release_date)
imdb_movies <- imdb_movies %>% dplyr::mutate(year = lubridate::year(release_date),
month = lubridate::month(release_date),
day = lubridate::day(release_date))
earning <- aggregate(imdb_movies$revenue, by=list(month=imdb_movies$month), FUN=sum)
res <- cor(earning)
res["month","x"]
??Aggregate
earning <- aggregate(imdb_movies$revenue, by=list(month=imdb_movies$month), FUN=mean)
View(earning)
earning <- aggregate(imdb_movies$revenue, by=list(month=imdb_movies$month), FUN=sum)
View(earning)
View(earning)
earning <- aggregate(imdb_movies$revenue, by=list(month=imdb_movies$month), FUN=mean)
View(earning)
earning <- aggregate(imdb_movies$revenue, by=list(month=imdb_movies$month), FUN=mean)
res <- cor(earning)
res["month","x"]
View(earning)
#¿En qué meses se han visto los lanzamientos máximos?
best <- imdb_movies %>% arrange(desc(revenue, popularity))
#¿En qué meses se han visto los lanzamientos máximos?
best <- imdb_movies %>% arrange(desc(revenue, popularity)))
#¿En qué meses se han visto los lanzamientos máximos?
best <- imdb_movies %>% arrange(desc(revenue, popularity))
View(best)
#¿En qué meses se han visto los lanzamientos máximos?
best <- imdb_movies %>% arrange(desc(month, revenue, popularity))
View(best)
meanPopMonth = mean(disp)) %>%
arrange(desc(meanPopMonth))
#¿En qué meses se han visto los lanzamientos máximos?
#group by month, best average sort
by_cyl <- imdb_movies %>%
group_by(month) %>%
summarise(meanPopMonth = mean(disp)) %>%
arrange(desc(meanPopMonth))
#¿En qué meses se han visto los lanzamientos máximos?
#group by month, best average sort
by_cyl <- imdb_movies %>%
group_by(month) %>%
summarise(meanPopMonth = mean(popularity)) %>%
arrange(desc(meanPopMonth))
View(by_cyl)
#¿En qué meses se han visto los lanzamientos máximos?
#group by month, best average sort
topMonth <- imdb_movies %>%
group_by(month) %>%
summarise(meanPopMonth = mean(popularity)) %>%
arrange(desc(meanPopMonth))
#¿En qué meses se han visto los lanzamientos máximos?
#group by month, best average sort
head[topMonth,1] <- imdb_movies %>%
group_by(month) %>%
summarise(meanPopMonth = mean(popularity)) %>%
arrange(desc(meanPopMonth))
head(topMonth, 1)
#¿En qué meses se han visto los lanzamientos máximos?
#group by month, best average sort
topMonth <- imdb_movies %>%
group_by(month) %>%
summarise(meanPopMonth = mean(popularity)) %>%
arrange(desc(meanPopMonth))
head(topMonth, 1)
